@model EntityLayer.Concrate.Portfolio
@{
    ViewData["Title"] = "PortfolioUpdate";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="card-header border-0">
    <h3 class="mb-0">Portfolio Guncellem Səhifəsi</h3>
</div>
@using (Html.BeginForm("PortfolioUpdate", "Portfolio", FormMethod.Post))
{
    @Html.HiddenFor(x => x.PortfolioID)
    <br />
    <br />
    <br />
    <br />

    @Html.Label("Title")
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Name)
    <br />
    @Html.Label("Image 1")
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ImageUrl)
    <br />
    @Html.Label("Image 2")
    @Html.TextBoxFor(x => x.ImageUrl2, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ImageUrl2)
    <br />
    @Html.Label("Proje Url")
    @Html.TextAreaFor(x => x.ProjectUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ProjectUrl)
    <br />
    @Html.Label("Price")
    @Html.TextAreaFor(x => x.Price, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Price)
    <br />
    @Html.Label("Value")
    @Html.TextAreaFor(x => x.Value, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Value)
    <br />
    @Html.Label("Platform")
    @Html.TextAreaFor(x => x.Platform, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Platform)
    <br />
 
    <button class="btn btn-success">Guncelle</button>

}

